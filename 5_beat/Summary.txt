Definitions: 
    "def bpm_to_k(beats_per_minute, f_nov, tg_win_len, tg_zero_pad):\n",
    "def k_to_bpm(k, f_nov, tg_win_len, tg_zero_pad): #k = periods / 1 window\n",
    "def best_tempogram_bins(tg, f_nov, bpm_low, bpm_high):\n",
    "def get_sinusoid_params(tg, ff, bins):\n",
    "def make_plp(freqs, phases, ff, win_len_tg, hop_tg):\n",
    "def listen_to_clicks(click_locations, audio) :\n",
    "def spectral_novelty(x, fft_len, hop_size, gamma):\n",
    "def k_to_freq(k, fft_len, fs): #periods/window --> rads / sample\n",
    "def freq_to_k(freq, fft_len, fs):\n",
    "def subband_novelty(x, fft_len, hop_size, gamma, fs, freq_start, freq_end):\n",
    "def backtrack(curr_index, lst, P): \n",
    "def getPath(nov, dhat, l):\n",
    "def index_to_bpm(i, ff):\n",
    "def bpm_to_index(bpm, ff):\n",
    "def find_beat_period(nov, ff, bpm_low, bpm_high):\n",
    "#def test_composite_novelty(a):\n",

Tempo estimation using 
 1. tempogram 
 2. dynamic programming model.

Tools to play sound with synthesized metronome at the estimated tempo
