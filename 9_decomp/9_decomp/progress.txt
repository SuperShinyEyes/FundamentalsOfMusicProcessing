
Pomo 1: 9:45 --> 10:10 
Goal: Ex 1

A stft X is created from x
 Length = 1000, N = 100, H = 75
 Rectangular Window

x_r(n) = ~x(n)/W(n)

Create W(n) and plot it

What is the windowing effect that must be undone to reconstruct x(n) from X(h,k)
What function W(n) is needed

first visualize
some sig x(n)
STFT --> X(h,k)
Want to go back to x(n)
 What is ~x(n)
 I am guessing that it is the ISTFT of x(n)

Think about process
 There will be a separate Inverse fourier transform for each window
 But since the time windows may overlap, sum will double add the parts that are represented in 2 different windows 

 So may this has to do with what W(n) is

let's assume that ~x(n) is the sum of the ift's of each step of the stft
W(n) should be the number of overlaps at any given n

Ex) 
 Window length N = 100
 Hop size H = 75
 So there will be an overlap in the last 25
 
 For any given time step, I can consider the all of the windows that has started before that time step
 windows start at all multiples of the hop size less than the current window number 
  for each of these starting points, consider if startin_pt + win_len is > than current n -- add 1

 What should value you be for 0? -- probably 1
  So make the range go to n+1 to be inclusive

 Check with Zach's answer
Done

Pomo 2: 10:10 --> 10:35
Goal: Ex 2

write istft(X, hop_size, centered)
 creates x(n) from X(h,k)

What does it mean if X(h,k) was created with centered windows
 Then was zero padded
 and h corresponds to i*H +- H/2

Assume STFT used a hanning window, no zero padding (window length == fft_length)
Undo affects of windowing by hanning by calculating W(n) 
 Avoid numerical instability at edges by setting W(n) = eps if W(n) < eps
 
how to load audio
 look at end of last lab

Can I subtract the np arrays
 Yes

What are the steps of taking the istft?
Well should be a ift of each window and then a sum
Hanning is zero on both sides

Can I just divide by hanning first

Pomo 3: 10:36 --> 11:01
Goal: Ex 2

This problem is on the longer side
First, I set up the testing framework

Now looking at the istft function
Each h val corresponds to a a window of the time signal

Go from column to time domain signal
 Should be n long

Want to count overlap, but for hanning
 so can do regular sum, with index into hanning each time
 Just take into account distance from hanning
Can divide arrays

How to deal with centered vs non centered
 Should be longer -- more slots

Pomo 4: 11:01 --> 11:26
Goal: Ex 2, outline ex 3

Maybe just one more slot -- seems reasonable

Cannot be broadcast together
 size mismatch
 centered x[] <-- regularized_time_chunk
 
 reg_time_chunk should be length of X column
 
Maybe has to do with size of irfft -- real ifft is half the size
 Unless abs of input?
 Made input real-valued

reg_time_chunk -- (100,)

But win_length is only 50!
X contains N/2+1 frequency bins
 N is orig fft size

spec = (51,2940)
fixed by doing ifft, not irfft
reg time chunk = (51,) -- correct
 Otherwise would be 100

Getting error, operands could not be broadcast together
 (37,), (51,) (37,)

x must be getting cut off
 How can half_length, be getting cut off
 added win_length instead of one
 Fixed logic in len_time_sig

recon_snd_cent not exactly same length as snd -- removes some samples

win length is given -- need to use that

Use this, undo real/complex hacks

What centering with even number?

What does the fmp.stft do with the last time bucket?
 If it dumps the last section, then will be truncated

Pomo 5: 5:22 --> 5:47
Goal: Finish ex 4

Describe / understand xh,xp,xr
 Created by taking median filter through spectrum or through time of spectrogram
Horizonal lines
 Tonal or harmonic sound
 Modeled as steady sinusoids
 Narrow-band frequency range
Vertical Lines
 Percussive hits or sharp onsets
 Modeled as an impulse
 Wide-band frequency range

Separate time based sig x into a harmonic compnoent xh and a percussive component xp st x=xh+xp

Beta is "separation factor"

Ex 5)
 Determine 2 diff decomps by hand

------------------------
Next Day 
------------------------
Should I enumerate by day or by num on current project
 Do num by current project, because day separation is pretty arbitrary
 Also nice information

Pomo 6: 2:20 --> 2:45
Goal: Exercise 5

Create matrix decomp by hand

Is there any geometric intuition that I can use

A nxm matrix is a m-->n dim linear transformation
 Don't get to talk about eigenvalues and such
 
Also integer valued
 Therefore any vector will stay on grid lines

Not getting great intuition off the bat
Note to self: use a multitude of representations for a given problem
 In this case it looks like the geometric picture is not serving me that well
 But I have the CS representation of matrices, as just blocks of numbers
  This is worth studying in its own right

Vectors: (ordered bag of numbers), drawing of an arrow, element of vector space (which has math properties)
 
Matrices: (ordered bag of col vectors), geometric linear transformation between vector spaces, generic rectangle of numbers 

Do a bit of research into non-negative matrix factorization by looking at the wikipedia page
 
Let V  = WH
 
What do I know about matrix product
 matrices closed under product -- output is a matrix
  So V is a bag of vectors
 V is W compose H, which is why the dimensions have to match up
 ei standard basis vectors --> column vecs of H
  Then ki standard basis vectors of the new space --> column vecs of W
 ei --> H[:,i] = sum(H[j,i]*ej) --> sum(H[j,i]*W[:,j])
 When n != m, maybe better to think of in terms of system of linear equations picture

Pomo 7: 2:45 --> 3:10 
Goal: Understand non-neg matrix factorization

How to think of intermediate dimensionality?
 
If small, can think of squeezing the space in, like an autoencoder
 This means finding relevant features for compression
If larger than final target spacee, I don't see the purpose

Can think of finding WH as factoring system of equations
 Then how to interpret intermediate dimension

System of equations:
 Ax=b
 Vx=b --> WHx=b --> H(x)=W^-1(b) 
 Since each row of the systems of equations is factored
  Is it actually the row -- think so
 After taking inverse of W, have fewer x elements in the equation
 So finding most descripting variables
  
Types:
 Approx non-neg matrix factorization
  Usually intermediat dim so project WH willbecome an approx to V
  Full decomp of V then amounts to 2 non-neg matrices W and H as well as a residual U
  Residual can be pos or neg
 Convex non-neg matrix factorization
  restricts the columns of W to convex combinations of the input data vectors
  Improves the quality of data representation of W
  Also H becomes more sparse and orthog
 Non-negative rank factorization
  nonnegative rank of V is equal to its actual rank
   nonneg rank is the dim of the intermediate vector space
  finding NRF is np-hard
 Different cost functions and regularization
  Examples of div fxns are squared error and kullback-Leiber div on pos matrices
 Online NMF

Pomo 8: 1:52 --> 2:17
Goal: Exercise 5

Do matrix decomp
 V = WH

Determine two different decompositions of the given matrix
 
Try to think about in terms of linear system of eq's -- not obvious answer

Look up how to do by hand
 There is a video on line that looks promising

Notice that the column space is 3 in the example
 So can write as 

[c1,c2,c4] * [[1,0,0,0,1,0],[0,1,1,0,0,0,0],[0,0,0,1,1,0]]

Could also do it with 2

Create non trivial same by picking different basis

Done

Pomo 9: 2:20 --> 2:45
Goal: Ex 6

Want to create useful matrix factorization
 
So preseed W with known pitches of the music
 Do in 2 parts

1. Make fxn make_pitch_spectral_model(fs, fft_len, pitch)

Second part is in ex 7

1 -- want fs, fft_len, pitch --> 1D vectors that is a spectral model for the given pitch
 With length N/2 + 1

How to make spectral model?

zones of non-zero values for each harmonic of the given pitch
 0's everywhere else

0.5 semitones around given pitch

What are the units of pitch given

Steps
 Convert pitch to frequency
 Somehow carry along the intervals with the pitch

Magnitude drops of with power

Should spectral model start at C?

What should format of spectral model be?
 Check out the decomp file

Output should be in frequency

Example has columns of length 1025

Wy this many pitch buckets

Why is the pitch range determined by N/2 + 1
 Oh because the pitch buckets are by k
 So need to convert from freq to k

Forgetting relation of k

I think radians/sample

so k*fs/(2*pi) = cycles/sec

k*fs/(2*pi) cycles/sec

If k has partial overlap, add to it

Pomo 10: 2:45 --> 3:10
Goal: Ex 6 and 7

Finish constructing

How many harmonics?

How to give extra dim to array
 reshape

Distribution of harmonics looks incorrect
 Confirmed

Is hstack working?
 Maybe issue is because need log
 Move on

Have ex 8 and 9 left

Pomo 11: 3:55 --> 4:20
Goal: Ex 8, outline 9

How large should H be

Pomo 12: 4:25 --> 4:50
Goal: Ex 9


